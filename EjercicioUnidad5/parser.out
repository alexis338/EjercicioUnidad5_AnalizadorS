Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> declaracion
Rule 1     declaracion -> ASIGNACION
Rule 2     declaracion -> ARITMETICA
Rule 3     declaracion -> BOOLMENMAY
Rule 4     declaracion -> BOOLMENMAYEQUALS
Rule 5     declaracion -> BOOLDIF
Rule 6     declaracion -> FORMULAS
Rule 7     declaracion -> STRING
Rule 8     declaracion -> ESTRUCTURA

Terminals, with rules where they appear

ARITMETICA           : 2
ASIGNACION           : 1
BOOLDIF              : 5
BOOLMENMAY           : 3
BOOLMENMAYEQUALS     : 4
ESTRUCTURA           : 8
FORMULAS             : 6
STRING               : 7
error                : 

Nonterminals, with rules where they appear

declaracion          : 0

Parsing method: LALR

state 0

    (0) S' -> . declaracion
    (1) declaracion -> . ASIGNACION
    (2) declaracion -> . ARITMETICA
    (3) declaracion -> . BOOLMENMAY
    (4) declaracion -> . BOOLMENMAYEQUALS
    (5) declaracion -> . BOOLDIF
    (6) declaracion -> . FORMULAS
    (7) declaracion -> . STRING
    (8) declaracion -> . ESTRUCTURA

    ASIGNACION      shift and go to state 2
    ARITMETICA      shift and go to state 3
    BOOLMENMAY      shift and go to state 4
    BOOLMENMAYEQUALS shift and go to state 5
    BOOLDIF         shift and go to state 6
    FORMULAS        shift and go to state 7
    STRING          shift and go to state 8
    ESTRUCTURA      shift and go to state 9

    declaracion                    shift and go to state 1

state 1

    (0) S' -> declaracion .



state 2

    (1) declaracion -> ASIGNACION .

    $end            reduce using rule 1 (declaracion -> ASIGNACION .)


state 3

    (2) declaracion -> ARITMETICA .

    $end            reduce using rule 2 (declaracion -> ARITMETICA .)


state 4

    (3) declaracion -> BOOLMENMAY .

    $end            reduce using rule 3 (declaracion -> BOOLMENMAY .)


state 5

    (4) declaracion -> BOOLMENMAYEQUALS .

    $end            reduce using rule 4 (declaracion -> BOOLMENMAYEQUALS .)


state 6

    (5) declaracion -> BOOLDIF .

    $end            reduce using rule 5 (declaracion -> BOOLDIF .)


state 7

    (6) declaracion -> FORMULAS .

    $end            reduce using rule 6 (declaracion -> FORMULAS .)


state 8

    (7) declaracion -> STRING .

    $end            reduce using rule 7 (declaracion -> STRING .)


state 9

    (8) declaracion -> ESTRUCTURA .

    $end            reduce using rule 8 (declaracion -> ESTRUCTURA .)

